"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PurposeRestrictionVectorEncoder=void 0;const BitLength_js_1=require("../BitLength.js"),BooleanEncoder_js_1=require("./BooleanEncoder.js"),index_js_1=require("../../errors/index.js"),IntEncoder_js_1=require("./IntEncoder.js"),index_js_2=require("../../model/index.js");class PurposeRestrictionVectorEncoder{static encode(e){let t=IntEncoder_js_1.IntEncoder.encode(e.numRestrictions,BitLength_js_1.BitLength.numRestrictions);return e.isEmpty()||e.getRestrictions().forEach(n=>{t+=IntEncoder_js_1.IntEncoder.encode(n.purposeId,BitLength_js_1.BitLength.purposeId),t+=IntEncoder_js_1.IntEncoder.encode(n.restrictionType,BitLength_js_1.BitLength.restrictionType);const o=e.getVendors(n),s=o.length;let r=0,i=0,d="";for(let t=0;t<s;t++){const n=o[t];0===i&&(r++,i=n);const _=o[s-1],c=e.gvl.vendorIds,B=e=>{for(;++e<=_&&!c.has(e););return e};if(t===s-1||o[t+1]>B(n)){const e=!(n===i);d+=BooleanEncoder_js_1.BooleanEncoder.encode(e),d+=IntEncoder_js_1.IntEncoder.encode(i,BitLength_js_1.BitLength.vendorId),e&&(d+=IntEncoder_js_1.IntEncoder.encode(n,BitLength_js_1.BitLength.vendorId)),i=0}}t+=IntEncoder_js_1.IntEncoder.encode(r,BitLength_js_1.BitLength.numEntries),t+=d}),t}static decode(e){let t=0;const n=new index_js_2.PurposeRestrictionVector,o=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.numRestrictions),BitLength_js_1.BitLength.numRestrictions);t+=BitLength_js_1.BitLength.numRestrictions;for(let s=0;s<o;s++){const o=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.purposeId),BitLength_js_1.BitLength.purposeId);t+=BitLength_js_1.BitLength.purposeId;const s=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.restrictionType),BitLength_js_1.BitLength.restrictionType);t+=BitLength_js_1.BitLength.restrictionType;const r=new index_js_2.PurposeRestriction(o,s),i=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.numEntries),BitLength_js_1.BitLength.numEntries);t+=BitLength_js_1.BitLength.numEntries;for(let o=0;o<i;o++){const o=BooleanEncoder_js_1.BooleanEncoder.decode(e.substr(t,BitLength_js_1.BitLength.anyBoolean));t+=BitLength_js_1.BitLength.anyBoolean;const s=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.vendorId),BitLength_js_1.BitLength.vendorId);if(t+=BitLength_js_1.BitLength.vendorId,o){const o=IntEncoder_js_1.IntEncoder.decode(e.substr(t,BitLength_js_1.BitLength.vendorId),BitLength_js_1.BitLength.vendorId);if(t+=BitLength_js_1.BitLength.vendorId,o<s)throw new index_js_1.DecodingError(`Invalid RangeEntry: endVendorId ${o} is less than ${s}`);for(let e=s;e<=o;e++)n.add(e,r)}else n.add(s,r)}}return n.bitLength=t,n}}exports.PurposeRestrictionVectorEncoder=PurposeRestrictionVectorEncoder;