"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BinarySearchTree=void 0;const Cloneable_js_1=require("../Cloneable.js");class BinarySearchTree extends Cloneable_js_1.Cloneable{constructor(){super(...arguments),this.root=null}isEmpty(){return!this.root}add(e){const t={value:e,left:null,right:null};let r;if(this.isEmpty())this.root=t;else for(r=this.root;;)if(e<r.value){if(null===r.left){r.left=t;break}r=r.left}else{if(!(e>r.value))break;if(null===r.right){r.right=t;break}r=r.right}}get(){const e=[];let t=this.root;for(;t;)if(t.left){let r=t.left;for(;r.right&&r.right!=t;)r=r.right;r.right==t?(r.right=null,e.push(t.value),t=t.right):(r.right=t,t=t.left)}else e.push(t.value),t=t.right;return e}contains(e){let t=!1,r=this.root;for(;r;){if(r.value===e){t=!0;break}e>r.value?r=r.right:e<r.value&&(r=r.left)}return t}min(e=this.root){let t;for(;e;)e.left?e=e.left:(t=e.value,e=null);return t}max(e=this.root){let t;for(;e;)e.right?e=e.right:(t=e.value,e=null);return t}remove(e,t=this.root){let r=null,l="left";for(;t;)if(e<t.value)r=t,t=t.left,l="left";else if(e>t.value)r=t,t=t.right,l="right";else{if(t.left||t.right)if(t.left)if(t.right){const e=this.min(t.right);this.remove(e,t.right),t.value=e}else r?r[l]=t.left:this.root=t.left;else r?r[l]=t.right:this.root=t.right;else r?r[l]=null:this.root=null;t=null}}}exports.BinarySearchTree=BinarySearchTree;